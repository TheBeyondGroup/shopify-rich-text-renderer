{"version":3,"file":"shopify-rich-text-renderer.min.js","sources":["../src/index.js"],"sourcesContent":["export function convertSchemaToHtml(schema, options = {}) {\n  const { scoped } = options\n  let html = ''\n  if (typeof schema === 'string' || schema instanceof String) {\n    schema = JSON.parse(schema)\n  }\n\n  if (schema.type === 'root' && schema.children.length > 0) {\n    if (scoped) {\n      html += `\n      <div class=\"${scoped === true ? `rte` : scoped}\">\n        ${(convertSchemaToHtml(schema.children), options)}\n      </div>\n      `\n    } else {\n      html += convertSchemaToHtml(schema.children, options)\n    }\n  } else {\n    for (const el of schema) {\n      switch (el.type) {\n        case 'paragraph':\n          html += buildParagraph(el, options)\n          break\n        case 'heading':\n          html += buildHeading(el, options)\n          break\n        case 'list':\n          html += buildList(el, options)\n          break\n        case 'list-item':\n          html += buildListItem(el, options)\n          break\n        case 'link':\n          html += buildLink(el, options)\n          break\n        case 'text':\n          html += buildText(el, options)\n          break\n        default:\n          break\n      }\n    }\n  }\n  return html\n}\n\nfunction getClass(tag, classes) {\n  if (classes && classes[tag]) {\n    return classes[tag]\n  } else {\n    return null\n  }\n}\n\nfunction outputAttributes(attributes) {\n  if (!attributes && attributes?.class) return ''\n  const ATTRIBUTE_SEPARATOR = ' '\n  return Object.keys(attributes)\n    .map(key => {\n      if (attributes[key]) {\n        return `${ATTRIBUTE_SEPARATOR}${key}=\"${attributes[key]}\"`\n      }\n    })\n    .join('')\n}\n\nfunction createElement(tag, classes, content, attributes = {}) {\n  attributes = { ...attributes, class: getClass(tag, classes) }\n  return `<${tag}${outputAttributes(attributes)}>${content}</${tag}>`\n}\n\nexport function buildParagraph(el, options) {\n  const { classes } = options\n  return createElement('p', classes, convertSchemaToHtml(el?.children, options))\n}\n\nexport function buildHeading(el, options) {\n  const { classes } = options\n  const tag = `h${el?.level}`\n  return createElement(tag, classes, convertSchemaToHtml(el?.children, options))\n}\n\nexport function buildList(el, options) {\n  const { classes } = options\n  const tag = el?.listType === 'ordered' ? 'ol' : 'ul'\n  return createElement(tag, classes, convertSchemaToHtml(el?.children, options))\n}\n\nexport function buildListItem(el, options) {\n  const { classes } = options\n  return createElement('li', classes, convertSchemaToHtml(el?.children, options))\n}\n\nexport function buildLink(el, options) {\n  const { classes } = options\n  const attributes = {\n    href: el?.url,\n    title: el?.title,\n    target: el?.target,\n  }\n  return createElement('a', classes, convertSchemaToHtml(el?.children, options), attributes)\n}\n\nexport function buildText(el, options) {\n  const { classes, newLineToBreak } = options\n  if (el?.bold) {\n    return createElement('strong', classes, el?.value)\n  } else if (el?.italic) {\n    return createElement('em', classes, el?.value)\n  } else {\n    return newLineToBreak ? el?.value?.replace(/\\n/g, '<br>') : el?.value\n  }\n}\n"],"names":["convertSchemaToHtml","schema","options","scoped","html","String","JSON","parse","type","children","length","el","buildParagraph","buildHeading","buildList","buildListItem","buildLink","buildText","getClass","tag","classes","createElement","content","attributes","class","Object","keys","map","key","join","outputAttributes","level","listType","href","url","title","target","newLineToBreak","bold","value","italic","replace"],"mappings":"2PAAO,SAASA,EAAoBC,EAAQC,EAAU,IACpD,MAAMC,OAAEA,GAAWD,EACnB,IAAIE,EAAO,GAKX,IAJsB,iBAAXH,GAAuBA,aAAkBI,UAClDJ,EAASK,KAAKC,MAAMN,IAGF,SAAhBA,EAAOO,MAAmBP,EAAOQ,SAASC,OAAS,EAEnDN,GADED,EACM,wBACiB,IAAXA,EAAkB,MAAQA,gBACnCH,EAAoBC,EAAOQ,UAAWP,0BAInCF,EAAoBC,EAAOQ,SAAUP,QAG/C,IAAK,MAAMS,KAAMV,EACf,OAAQU,EAAGH,MACT,IAAK,YACHJ,GAAQQ,EAAeD,EAAIT,GAC3B,MACF,IAAK,UACHE,GAAQS,EAAaF,EAAIT,GACzB,MACF,IAAK,OACHE,GAAQU,EAAUH,EAAIT,GACtB,MACF,IAAK,YACHE,GAAQW,EAAcJ,EAAIT,GAC1B,MACF,IAAK,OACHE,GAAQY,EAAUL,EAAIT,GACtB,MACF,IAAK,OACHE,GAAQa,EAAUN,EAAIT,GAO9B,OAAOE,CACT,CAEA,SAASc,EAASC,EAAKC,GACrB,OAAIA,GAAWA,EAAQD,GACdC,EAAQD,GAER,IAEX,CAcA,SAASE,EAAcF,EAAKC,EAASE,EAASC,EAAa,CAAA,GAEzD,MAAO,IAAIJ,IAdb,SAA0BI,GACxB,OAAKA,GAAcA,GAAYC,MAAc,GAEtCC,OAAOC,KAAKH,GAChBI,KAAIC,IACH,GAAIL,EAAWK,GACb,MAAO,IAAyBA,MAAQL,EAAWK,KACpD,IAEFC,KAAK,GACV,CAImBC,CADjBP,EAAa,IAAKA,EAAYC,MAAON,EAASC,EAAKC,QACFE,MAAYH,IAC/D,CAEO,SAASP,EAAeD,EAAIT,GACjC,MAAMkB,QAAEA,GAAYlB,EACpB,OAAOmB,EAAc,IAAKD,EAASpB,EAAoBW,GAAIF,SAAUP,GACvE,CAEO,SAASW,EAAaF,EAAIT,GAC/B,MAAMkB,QAAEA,GAAYlB,EAEpB,OAAOmB,EADK,IAAIV,GAAIoB,QACMX,EAASpB,EAAoBW,GAAIF,SAAUP,GACvE,CAEO,SAASY,EAAUH,EAAIT,GAC5B,MAAMkB,QAAEA,GAAYlB,EAEpB,OAAOmB,EADsB,YAAjBV,GAAIqB,SAAyB,KAAO,KACtBZ,EAASpB,EAAoBW,GAAIF,SAAUP,GACvE,CAEO,SAASa,EAAcJ,EAAIT,GAChC,MAAMkB,QAAEA,GAAYlB,EACpB,OAAOmB,EAAc,KAAMD,EAASpB,EAAoBW,GAAIF,SAAUP,GACxE,CAEO,SAASc,EAAUL,EAAIT,GAC5B,MAAMkB,QAAEA,GAAYlB,EACdqB,EAAa,CACjBU,KAAMtB,GAAIuB,IACVC,MAAOxB,GAAIwB,MACXC,OAAQzB,GAAIyB,QAEd,OAAOf,EAAc,IAAKD,EAASpB,EAAoBW,GAAIF,SAAUP,GAAUqB,EACjF,CAEO,SAASN,EAAUN,EAAIT,GAC5B,MAAMkB,QAAEA,EAAOiB,eAAEA,GAAmBnC,EACpC,OAAIS,GAAI2B,KACCjB,EAAc,SAAUD,EAAST,GAAI4B,OACnC5B,GAAI6B,OACNnB,EAAc,KAAMD,EAAST,GAAI4B,OAEjCF,EAAiB1B,GAAI4B,OAAOE,QAAQ,MAAO,QAAU9B,GAAI4B,KAEpE"}