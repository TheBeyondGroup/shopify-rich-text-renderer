{"version":3,"file":"shopify-rich-text-renderer.esm.min.js","sources":["../src/index.js"],"sourcesContent":["export function convertSchemaToHtml(schema, scoped = false) {\n  if (typeof schema === 'string' || schema instanceof String) {\n    schema = JSON.parse(schema)\n  }\n  let html = ``\n  if (schema.type === 'root' && schema.children.length > 0) {\n    if (scoped) {\n      html += `\n      <div class=\"${scoped === true ? `rte` : scoped}\">\n        ${convertSchemaToHtml(schema.children)}\n      </div>\n      `\n    } else {\n      html += convertSchemaToHtml(schema.children)\n    }\n  } else {\n    for (const el of schema) {\n      switch (el.type) {\n        case 'paragraph':\n          html += buildParagraph(el)\n          break\n        case 'heading':\n          html += buildHeading(el)\n          break\n        case 'list':\n          html += buildList(el)\n          break\n        case 'list-item':\n          html += buildListItem(el)\n          break\n        case 'link':\n          html += buildLink(el)\n          break\n        case 'text':\n          html += buildText(el)\n          break\n        default:\n          break\n      }\n    }\n  }\n  return html\n}\n\nexport function buildParagraph(el) {\n  if (el?.children) {\n    return `<p>${convertSchemaToHtml(el?.children)}</p>`\n  }\n}\n\nexport function buildHeading(el) {\n  if (el?.children) {\n    return `<h${el?.level}>${convertSchemaToHtml(el?.children)}</h${el?.level}>`\n  }\n}\n\nexport function buildList(el) {\n  if (el?.children) {\n    if (el?.listType === 'ordered') {\n      return `<ol>${convertSchemaToHtml(el?.children)}</ol>`\n    } else {\n      return `<ul>${convertSchemaToHtml(el?.children)}</ul>`\n    }\n  }\n}\n\nexport function buildListItem(el) {\n  if (el?.children) {\n    return `<li>${convertSchemaToHtml(el?.children)}</li>`\n  }\n}\n\nexport function buildLink(el) {\n  return `<a href=\"${el?.url}\" title=\"${el?.title}\" target=\"${\n    el?.target\n  }\">${convertSchemaToHtml(el?.children)}</a>`\n}\n\nexport function buildText(el) {\n  if (el?.bold) {\n    return `<strong>${el?.value}</strong>`\n  }\n  if (el?.italic) {\n    return `<em>${el?.value}</em>`\n  }\n  return el?.value\n}\n"],"names":["convertSchemaToHtml","schema","scoped","String","JSON","parse","html","type","children","length","el","buildParagraph","buildHeading","buildList","buildListItem","buildLink","buildText","level","listType","url","title","target","bold","value","italic"],"mappings":"AAAO,SAASA,EAAoBC,EAAQC,GAAS,IAC7B,iBAAXD,GAAuBA,aAAkBE,UAClDF,EAASG,KAAKC,MAAMJ,IAEtB,IAAIK,EAAO,GACX,GAAoB,SAAhBL,EAAOM,MAAmBN,EAAOO,SAASC,OAAS,EAEnDH,GADEJ,EACM,wBACiB,IAAXA,EAAkB,MAAQA,gBACpCF,EAAoBC,EAAOO,kCAIvBR,EAAoBC,EAAOO,eAGrC,IAAK,MAAME,KAAMT,EACf,OAAQS,EAAGH,MACT,IAAK,YACHD,GAAQK,EAAeD,GACvB,MACF,IAAK,UACHJ,GAAQM,EAAaF,GACrB,MACF,IAAK,OACHJ,GAAQO,EAAUH,GAClB,MACF,IAAK,YACHJ,GAAQQ,EAAcJ,GACtB,MACF,IAAK,OACHJ,GAAQS,EAAUL,GAClB,MACF,IAAK,OACHJ,GAAQU,EAAUN,GAO1B,OAAOJ,CACT,CAEO,SAASK,EAAeD,GAC7B,GAAIA,GAAIF,SACN,MAAO,MAAMR,EAAoBU,GAAIF,eAEzC,CAEO,SAASI,EAAaF,GAC3B,GAAIA,GAAIF,SACN,MAAO,KAAKE,GAAIO,SAASjB,EAAoBU,GAAIF,eAAeE,GAAIO,QAExE,CAEO,SAASJ,EAAUH,GACxB,GAAIA,GAAIF,SACN,MAAqB,YAAjBE,GAAIQ,SACC,OAAOlB,EAAoBU,GAAIF,iBAE/B,OAAOR,EAAoBU,GAAIF,gBAG5C,CAEO,SAASM,EAAcJ,GAC5B,GAAIA,GAAIF,SACN,MAAO,OAAOR,EAAoBU,GAAIF,gBAE1C,CAEO,SAASO,EAAUL,GACxB,MAAO,YAAYA,GAAIS,eAAeT,GAAIU,kBACxCV,GAAIW,WACDrB,EAAoBU,GAAIF,eAC/B,CAEO,SAASQ,EAAUN,GACxB,OAAIA,GAAIY,KACC,WAAWZ,GAAIa,iBAEpBb,GAAIc,OACC,OAAOd,GAAIa,aAEbb,GAAIa,KACb"}